[{"returnType":"float","name":"Clamp","params":[{"name":"value","type":"float"},{"name":"min","type":"float"},{"name":"max","type":"float"}],"description":"Clamp float value"},{"returnType":"float","name":"Lerp","params":[{"name":"start","type":"float"},{"name":"end","type":"float"},{"name":"amount","type":"float"}],"description":"Calculate linear interpolation between two floats"},{"returnType":"float","name":"Normalize","params":[{"name":"value","type":"float"},{"name":"start","type":"float"},{"name":"end","type":"float"}],"description":"Normalize input value within input range"},{"returnType":"float","name":"Remap","params":[{"name":"value","type":"float"},{"name":"inputStart","type":"float"},{"name":"inputEnd","type":"float"},{"name":"outputStart","type":"float"},{"name":"outputEnd","type":"float"}],"description":"Remap input value within input range to output range"},{"returnType":"float","name":"Wrap","params":[{"name":"value","type":"float"},{"name":"min","type":"float"},{"name":"max","type":"float"}],"description":"Wrap input value from min to max"},{"returnType":"int","name":"FloatEquals","params":[{"name":"x","type":"float"},{"name":"y","type":"float"}],"description":"Check whether two given floats are almost equal"},{"returnType":"Vector2","name":"Vector2Zero","params":[],"description":"Vector with components value 0.0f"},{"returnType":"Vector2","name":"Vector2One","params":[],"description":"Vector with components value 1.0f"},{"returnType":"Vector2","name":"Vector2Add","params":[{"name":"v1","type":"Vector2"},{"name":"v2","type":"Vector2"}],"description":"Add two vectors (v1 + v2)"},{"returnType":"Vector2","name":"Vector2AddValue","params":[{"name":"v","type":"Vector2"},{"name":"add","type":"float"}],"description":"Add vector and float value"},{"returnType":"Vector2","name":"Vector2Subtract","params":[{"name":"v1","type":"Vector2"},{"name":"v2","type":"Vector2"}],"description":"Subtract two vectors (v1 - v2)"},{"returnType":"Vector2","name":"Vector2SubtractValue","params":[{"name":"v","type":"Vector2"},{"name":"sub","type":"float"}],"description":"Subtract vector by float value"},{"returnType":"float","name":"Vector2Length","params":[{"name":"v","type":"Vector2"}],"description":"Calculate vector length"},{"returnType":"float","name":"Vector2LengthSqr","params":[{"name":"v","type":"Vector2"}],"description":"Calculate vector square length"},{"returnType":"float","name":"Vector2DotProduct","params":[{"name":"v1","type":"Vector2"},{"name":"v2","type":"Vector2"}],"description":"Calculate two vectors dot product"},{"returnType":"float","name":"Vector2Distance","params":[{"name":"v1","type":"Vector2"},{"name":"v2","type":"Vector2"}],"description":"Calculate distance between two vectors"},{"returnType":"float","name":"Vector2DistanceSqr","params":[{"name":"v1","type":"Vector2"},{"name":"v2","type":"Vector2"}],"description":"Calculate square distance between two vectors"},{"returnType":"float","name":"Vector2Angle","params":[{"name":"v1","type":"Vector2"},{"name":"v2","type":"Vector2"}],"description":"Calculate angle between two vectors\nNOTE: Angle is calculated from origin point (0, 0)"},{"returnType":"float","name":"Vector2LineAngle","params":[{"name":"start","type":"Vector2"},{"name":"end","type":"Vector2"}],"description":"Calculate angle defined by a two vectors line\nNOTE: Parameters need to be normalized\nCurrent implementation should be aligned with glm::angle"},{"returnType":"Vector2","name":"Vector2Scale","params":[{"name":"v","type":"Vector2"},{"name":"scale","type":"float"}],"description":"Scale vector (multiply by value)"},{"returnType":"Vector2","name":"Vector2Multiply","params":[{"name":"v1","type":"Vector2"},{"name":"v2","type":"Vector2"}],"description":"Multiply vector by vector"},{"returnType":"Vector2","name":"Vector2Negate","params":[{"name":"v","type":"Vector2"}],"description":"Negate vector"},{"returnType":"Vector2","name":"Vector2Divide","params":[{"name":"v1","type":"Vector2"},{"name":"v2","type":"Vector2"}],"description":"Divide vector by vector"},{"returnType":"Vector2","name":"Vector2Normalize","params":[{"name":"v","type":"Vector2"}],"description":"Normalize provided vector"},{"returnType":"Vector2","name":"Vector2Transform","params":[{"name":"v","type":"Vector2"},{"name":"mat","type":"Matrix"}],"description":"Transforms a Vector2 by a given Matrix"},{"returnType":"Vector2","name":"Vector2Lerp","params":[{"name":"v1","type":"Vector2"},{"name":"v2","type":"Vector2"},{"name":"amount","type":"float"}],"description":"Calculate linear interpolation between two vectors"},{"returnType":"Vector2","name":"Vector2Reflect","params":[{"name":"v","type":"Vector2"},{"name":"normal","type":"Vector2"}],"description":"Calculate reflected vector to normal"},{"returnType":"Vector2","name":"Vector2Rotate","params":[{"name":"v","type":"Vector2"},{"name":"angle","type":"float"}],"description":"Rotate vector by angle"},{"returnType":"Vector2","name":"Vector2MoveTowards","params":[{"name":"v","type":"Vector2"},{"name":"target","type":"Vector2"},{"name":"maxDistance","type":"float"}],"description":"Move Vector towards target"},{"returnType":"Vector2","name":"Vector2Invert","params":[{"name":"v","type":"Vector2"}],"description":"Invert the given vector"},{"returnType":"Vector2","name":"Vector2Clamp","params":[{"name":"v","type":"Vector2"},{"name":"min","type":"Vector2"},{"name":"max","type":"Vector2"}],"description":"Clamp the components of the vector between\nmin and max values specified by the given vectors"},{"returnType":"Vector2","name":"Vector2ClampValue","params":[{"name":"v","type":"Vector2"},{"name":"min","type":"float"},{"name":"max","type":"float"}],"description":"Clamp the magnitude of the vector between two min and max values"},{"returnType":"int","name":"Vector2Equals","params":[{"name":"p","type":"Vector2"},{"name":"q","type":"Vector2"}],"description":"Check whether two given vectors are almost equal"},{"returnType":"Vector3","name":"Vector3Zero","params":[],"description":"Vector with components value 0.0f"},{"returnType":"Vector3","name":"Vector3One","params":[],"description":"Vector with components value 1.0f"},{"returnType":"Vector3","name":"Vector3Add","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Add two vectors"},{"returnType":"Vector3","name":"Vector3AddValue","params":[{"name":"v","type":"Vector3"},{"name":"add","type":"float"}],"description":"Add vector and float value"},{"returnType":"Vector3","name":"Vector3Subtract","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Subtract two vectors"},{"returnType":"Vector3","name":"Vector3SubtractValue","params":[{"name":"v","type":"Vector3"},{"name":"sub","type":"float"}],"description":"Subtract vector by float value"},{"returnType":"Vector3","name":"Vector3Scale","params":[{"name":"v","type":"Vector3"},{"name":"scalar","type":"float"}],"description":"Multiply vector by scalar"},{"returnType":"Vector3","name":"Vector3Multiply","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Multiply vector by vector"},{"returnType":"Vector3","name":"Vector3CrossProduct","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Calculate two vectors cross product"},{"returnType":"Vector3","name":"Vector3Perpendicular","params":[{"name":"v","type":"Vector3"}],"description":"Calculate one vector perpendicular vector"},{"returnType":"float","name":"Vector3Length","params":[{"name":"v","type":"const Vector3"}],"description":"Calculate vector length"},{"returnType":"float","name":"Vector3LengthSqr","params":[{"name":"v","type":"const Vector3"}],"description":"Calculate vector square length"},{"returnType":"float","name":"Vector3DotProduct","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Calculate two vectors dot product"},{"returnType":"float","name":"Vector3Distance","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Calculate distance between two vectors"},{"returnType":"float","name":"Vector3DistanceSqr","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Calculate square distance between two vectors"},{"returnType":"float","name":"Vector3Angle","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Calculate angle between two vectors"},{"returnType":"Vector3","name":"Vector3Negate","params":[{"name":"v","type":"Vector3"}],"description":"Negate provided vector (invert direction)"},{"returnType":"Vector3","name":"Vector3Divide","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Divide vector by vector"},{"returnType":"Vector3","name":"Vector3Normalize","params":[{"name":"v","type":"Vector3"}],"description":"Normalize provided vector"},{"returnType":"void","name":"Vector3OrthoNormalize","params":[{"name":"v1","type":"Vector3 *"},{"name":"v2","type":"Vector3 *"}],"description":"Orthonormalize provided vectors\nMakes vectors normalized and orthogonal to each other\nGram-Schmidt function implementation"},{"returnType":"Vector3","name":"Vector3Transform","params":[{"name":"v","type":"Vector3"},{"name":"mat","type":"Matrix"}],"description":"Transforms a Vector3 by a given Matrix"},{"returnType":"Vector3","name":"Vector3RotateByQuaternion","params":[{"name":"v","type":"Vector3"},{"name":"q","type":"Quaternion"}],"description":"Transform a vector by quaternion rotation"},{"returnType":"Vector3","name":"Vector3RotateByAxisAngle","params":[{"name":"v","type":"Vector3"},{"name":"axis","type":"Vector3"},{"name":"angle","type":"float"}],"description":"Rotates a vector around an axis"},{"returnType":"Vector3","name":"Vector3Lerp","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"},{"name":"amount","type":"float"}],"description":"Calculate linear interpolation between two vectors"},{"returnType":"Vector3","name":"Vector3Reflect","params":[{"name":"v","type":"Vector3"},{"name":"normal","type":"Vector3"}],"description":"Calculate reflected vector to normal"},{"returnType":"Vector3","name":"Vector3Min","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Get min value for each pair of components"},{"returnType":"Vector3","name":"Vector3Max","params":[{"name":"v1","type":"Vector3"},{"name":"v2","type":"Vector3"}],"description":"Get max value for each pair of components"},{"returnType":"Vector3","name":"Vector3Barycenter","params":[{"name":"p","type":"Vector3"},{"name":"a","type":"Vector3"},{"name":"b","type":"Vector3"},{"name":"c","type":"Vector3"}],"description":"Compute barycenter coordinates (u, v, w) for point p with respect to triangle (a, b, c)\nNOTE: Assumes P is on the plane of the triangle"},{"returnType":"Vector3","name":"Vector3Unproject","params":[{"name":"source","type":"Vector3"},{"name":"projection","type":"Matrix"},{"name":"view","type":"Matrix"}],"description":"Projects a Vector3 from screen space into object space\nNOTE: We are avoiding calling other raymath functions despite available"},{"returnType":"float3","name":"Vector3ToFloatV","params":[{"name":"v","type":"Vector3"}],"description":"Get Vector3 as float array"},{"returnType":"Vector3","name":"Vector3Invert","params":[{"name":"v","type":"Vector3"}],"description":"Invert the given vector"},{"returnType":"Vector3","name":"Vector3Clamp","params":[{"name":"v","type":"Vector3"},{"name":"min","type":"Vector3"},{"name":"max","type":"Vector3"}],"description":"Clamp the components of the vector between\nmin and max values specified by the given vectors"},{"returnType":"Vector3","name":"Vector3ClampValue","params":[{"name":"v","type":"Vector3"},{"name":"min","type":"float"},{"name":"max","type":"float"}],"description":"Clamp the magnitude of the vector between two values"},{"returnType":"int","name":"Vector3Equals","params":[{"name":"p","type":"Vector3"},{"name":"q","type":"Vector3"}],"description":"Check whether two given vectors are almost equal"},{"returnType":"Vector3","name":"Vector3Refract","params":[{"name":"v","type":"Vector3"},{"name":"n","type":"Vector3"},{"name":"r","type":"float"}],"description":"Compute the direction of a refracted ray where v specifies the\nnormalized direction of the incoming ray, n specifies the\nnormalized normal vector of the interface of two optical media,\nand r specifies the ratio of the refractive index of the medium\nfrom where the ray comes to the refractive index of the medium\non the other side of the surface"},{"returnType":"float","name":"MatrixDeterminant","params":[{"name":"mat","type":"Matrix"}],"description":"Compute matrix determinant"},{"returnType":"float","name":"MatrixTrace","params":[{"name":"mat","type":"Matrix"}],"description":"Get the trace of the matrix (sum of the values along the diagonal)"},{"returnType":"Matrix","name":"MatrixTranspose","params":[{"name":"mat","type":"Matrix"}],"description":"Transposes provided matrix"},{"returnType":"Matrix","name":"MatrixInvert","params":[{"name":"mat","type":"Matrix"}],"description":"Invert provided matrix"},{"returnType":"Matrix","name":"MatrixIdentity","params":[],"description":"Get identity matrix"},{"returnType":"Matrix","name":"MatrixAdd","params":[{"name":"left","type":"Matrix"},{"name":"right","type":"Matrix"}],"description":"Add two matrices"},{"returnType":"Matrix","name":"MatrixSubtract","params":[{"name":"left","type":"Matrix"},{"name":"right","type":"Matrix"}],"description":"Subtract two matrices (left - right)"},{"returnType":"Matrix","name":"MatrixMultiply","params":[{"name":"left","type":"Matrix"},{"name":"right","type":"Matrix"}],"description":"Get two matrix multiplication\nNOTE: When multiplying matrices... the order matters!"},{"returnType":"Matrix","name":"MatrixTranslate","params":[{"name":"x","type":"float"},{"name":"y","type":"float"},{"name":"z","type":"float"}],"description":"Get translation matrix"},{"returnType":"Matrix","name":"MatrixRotate","params":[{"name":"axis","type":"Vector3"},{"name":"angle","type":"float"}],"description":"Create rotation matrix from axis and angle\nNOTE: Angle should be provided in radians"},{"returnType":"Matrix","name":"MatrixRotateX","params":[{"name":"angle","type":"float"}],"description":"Get x-rotation matrix\nNOTE: Angle must be provided in radians"},{"returnType":"Matrix","name":"MatrixRotateY","params":[{"name":"angle","type":"float"}],"description":"Get y-rotation matrix\nNOTE: Angle must be provided in radians"},{"returnType":"Matrix","name":"MatrixRotateZ","params":[{"name":"angle","type":"float"}],"description":"Get z-rotation matrix\nNOTE: Angle must be provided in radians"},{"returnType":"Matrix","name":"MatrixRotateXYZ","params":[{"name":"angle","type":"Vector3"}],"description":"Get xyz-rotation matrix\nNOTE: Angle must be provided in radians"},{"returnType":"Matrix","name":"MatrixRotateZYX","params":[{"name":"angle","type":"Vector3"}],"description":"Get zyx-rotation matrix\nNOTE: Angle must be provided in radians"},{"returnType":"Matrix","name":"MatrixScale","params":[{"name":"x","type":"float"},{"name":"y","type":"float"},{"name":"z","type":"float"}],"description":"Get scaling matrix"},{"returnType":"Matrix","name":"MatrixFrustum","params":[{"name":"left","type":"double"},{"name":"right","type":"double"},{"name":"bottom","type":"double"},{"name":"top","type":"double"},{"name":"near","type":"double"},{"name":"far","type":"double"}],"description":"Get perspective projection matrix"},{"returnType":"Matrix","name":"MatrixPerspective","params":[{"name":"fovy","type":"double"},{"name":"aspect","type":"double"},{"name":"near","type":"double"},{"name":"far","type":"double"}],"description":"Get perspective projection matrix\nNOTE: Fovy angle must be provided in radians"},{"returnType":"Matrix","name":"MatrixOrtho","params":[{"name":"left","type":"double"},{"name":"right","type":"double"},{"name":"bottom","type":"double"},{"name":"top","type":"double"},{"name":"near","type":"double"},{"name":"far","type":"double"}],"description":"Get orthographic projection matrix"},{"returnType":"Matrix","name":"MatrixLookAt","params":[{"name":"eye","type":"Vector3"},{"name":"target","type":"Vector3"},{"name":"up","type":"Vector3"}],"description":"Get camera look-at matrix (view matrix)"},{"returnType":"float16","name":"MatrixToFloatV","params":[{"name":"mat","type":"Matrix"}],"description":"Get float array of matrix data"},{"returnType":"Quaternion","name":"QuaternionAdd","params":[{"name":"q1","type":"Quaternion"},{"name":"q2","type":"Quaternion"}],"description":"Add two quaternions"},{"returnType":"Quaternion","name":"QuaternionAddValue","params":[{"name":"q","type":"Quaternion"},{"name":"add","type":"float"}],"description":"Add quaternion and float value"},{"returnType":"Quaternion","name":"QuaternionSubtract","params":[{"name":"q1","type":"Quaternion"},{"name":"q2","type":"Quaternion"}],"description":"Subtract two quaternions"},{"returnType":"Quaternion","name":"QuaternionSubtractValue","params":[{"name":"q","type":"Quaternion"},{"name":"sub","type":"float"}],"description":"Subtract quaternion and float value"},{"returnType":"Quaternion","name":"QuaternionIdentity","params":[],"description":"Get identity quaternion"},{"returnType":"float","name":"QuaternionLength","params":[{"name":"q","type":"Quaternion"}],"description":"Computes the length of a quaternion"},{"returnType":"Quaternion","name":"QuaternionNormalize","params":[{"name":"q","type":"Quaternion"}],"description":"Normalize provided quaternion"},{"returnType":"Quaternion","name":"QuaternionInvert","params":[{"name":"q","type":"Quaternion"}],"description":"Invert provided quaternion"},{"returnType":"Quaternion","name":"QuaternionMultiply","params":[{"name":"q1","type":"Quaternion"},{"name":"q2","type":"Quaternion"}],"description":"Calculate two quaternion multiplication"},{"returnType":"Quaternion","name":"QuaternionScale","params":[{"name":"q","type":"Quaternion"},{"name":"mul","type":"float"}],"description":"Scale quaternion by float value"},{"returnType":"Quaternion","name":"QuaternionDivide","params":[{"name":"q1","type":"Quaternion"},{"name":"q2","type":"Quaternion"}],"description":"Divide two quaternions"},{"returnType":"Quaternion","name":"QuaternionLerp","params":[{"name":"q1","type":"Quaternion"},{"name":"q2","type":"Quaternion"},{"name":"amount","type":"float"}],"description":"Calculate linear interpolation between two quaternions"},{"returnType":"Quaternion","name":"QuaternionNlerp","params":[{"name":"q1","type":"Quaternion"},{"name":"q2","type":"Quaternion"},{"name":"amount","type":"float"}],"description":"Calculate slerp-optimized interpolation between two quaternions"},{"returnType":"Quaternion","name":"QuaternionSlerp","params":[{"name":"q1","type":"Quaternion"},{"name":"q2","type":"Quaternion"},{"name":"amount","type":"float"}],"description":"Calculates spherical linear interpolation between two quaternions"},{"returnType":"Quaternion","name":"QuaternionFromVector3ToVector3","params":[{"name":"from","type":"Vector3"},{"name":"to","type":"Vector3"}],"description":"Calculate quaternion based on the rotation from one vector to another"},{"returnType":"Quaternion","name":"QuaternionFromMatrix","params":[{"name":"mat","type":"Matrix"}],"description":"Get a quaternion for a given rotation matrix"},{"returnType":"Matrix","name":"QuaternionToMatrix","params":[{"name":"q","type":"Quaternion"}],"description":"Get a matrix for a given quaternion"},{"returnType":"Quaternion","name":"QuaternionFromAxisAngle","params":[{"name":"axis","type":"Vector3"},{"name":"angle","type":"float"}],"description":"Get rotation quaternion for an angle and axis\nNOTE: Angle must be provided in radians"},{"returnType":"void","name":"QuaternionToAxisAngle","params":[{"name":"q","type":"Quaternion"},{"name":"outAxis","type":"Vector3 *"},{"name":"outAngle","type":"float *"}],"description":"Get the rotation angle and axis for a given quaternion"},{"returnType":"Quaternion","name":"QuaternionFromEuler","params":[{"name":"pitch","type":"float"},{"name":"yaw","type":"float"},{"name":"roll","type":"float"}],"description":"Get the quaternion equivalent to Euler angles\nNOTE: Rotation order is ZYX"},{"returnType":"Vector3","name":"QuaternionToEuler","params":[{"name":"q","type":"Quaternion"}],"description":"Get the Euler angles equivalent to quaternion (roll, pitch, yaw)\nNOTE: Angles are returned in a Vector3 struct in radians"},{"returnType":"Quaternion","name":"QuaternionTransform","params":[{"name":"q","type":"Quaternion"},{"name":"mat","type":"Matrix"}],"description":"Transform a quaternion given a transformation matrix"},{"returnType":"int","name":"QuaternionEquals","params":[{"name":"p","type":"Quaternion"},{"name":"q","type":"Quaternion"}],"description":"Check whether two given quaternions are almost equal"}]